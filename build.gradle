plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.4'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'com.google.cloud.tools.jib' version '3.1.4'
}

jib {
	from {
		image = 'openjdk:17.0.2-slim'
	}
	to {
		image = 'leeyoungchan/member-service'
		tags = ['latest']
	}
	container {
		jvmFlags = ['-Dspring.profiles.active=env']
		//jvmFlags = ["-Xms128m", "-Xmx128m"]
	}
}
group = 'semicolon'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2023.0.1")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	runtimeOnly 'com.h2database:h2'
//	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	runtimeOnly 'com.mysql:mysql-connector-j'

	implementation 'org.springframework.kafka:spring-kafka'

	//jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	//test
	testImplementation 'org.assertj:assertj-core:3.20.2'

	//Spring webClient
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	// QueryDsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta" // 버전 변경
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// OpenAPI
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
//	implementation 'org.springdoc:springdoc-openapi-webflux-core:1.5.13'
//	implementation 'org.springdoc:springdoc-openapi-webflux-ui:1.5.13'

	implementation 'org.springframework.kafka:spring-kafka'
//	implementation "io.springfox:springfox-boot-starter:3.0.0"

	//스프링 클라우드 유레카
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	//쿠버네티스
	implementation 'org.springframework.cloud:spring-cloud-starter-kubernetes-client'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
